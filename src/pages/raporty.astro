---
import Layout from "../layouts/Layout.astro";
import ContactForm from "../components/ContactForm.astro";
import HeroHeader from "../components/HeroHeader.astro";
import WhyUs from "../components/WhyUs.astro";
import Persons from "../components/Persons.astro";

const hero = {
  bg: "#750843",
  title: "Wybrane dane finansowe",
  subtitle: "Wise finance",
  text: "Torem ipsum dolor sit amet, consectetur adipiscing elit. Nunc vulputate libero et velit interdum, ac aliquet odio mattis. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Class aptent taciti sociosqu ad litora torquent per conubia",
  button_link: "/dane-finansowe",
  image: "/assets/images/dane-finansowe.jpeg",
};

const tableData = [
  [
    "Nazwa podmioty",
    "Liczba posiadanych akcji na okaziciela",
    "Udział w kapitale akcyjnym (%)",
    "Liczba głosów na WZ",
    "Udział głosów na WZ (%)",
  ],
  ["Imię i nazwisko", "12875,00000", "32,87 %", "12875,00000", "32,87 %"],
  ["Imię i nazwisko", "12875,00000", "32,87 %", "12875,00000", "32,87 %"],
  ["Imię i nazwisko", "12875,00000", "32,87 %", "12875,00000", "32,87 %"],
  ["Imię i nazwisko", "12875,00000", "32,87 %", "12875,00000", "32,87 %"],
  ["Imię i nazwisko", "12875,00000", "32,87 %", "12875,00000", "32,87 %"],
  ["Imię i nazwisko", "12875,00000", "32,87 %", "12875,00000", "32,87 %"],
];
---

<Layout title="Wise energy">
  <main>
    <HeroHeader
      bg={hero.bg}
      title={hero.title}
      subtitle={hero.subtitle}
      text={hero.text}
      button_link={hero.button_link}
      image={hero.image}
      img_opacity={0.5}
      img_has_cover={"hero-img-cover-bordo"}
    />
    <section class="py-20 bg-grey-500">
      <div class="container wrapper">
        <div class="grid md:grid-cols-3 gap-[10px]">
          <a class="btn primary outlined w-full text-center active">Raporty bieżące</a>
          <a class="btn primary outlined w-full text-center">Raporty okresowe</a>
          <a class="btn primary outlined w-full text-center">Dobre praktyki</a>
        </div>
      </div>
    </section>

    <section class="bg-neutral-200 py-20">
      <div class="container wrapper overflow-x-auto">
        <div class="flex flex-wrap gap-4 w-full mb-8">
          <a
            class="btn primary outlined hover:!bg-bordo-100 hover:text-white text-bordo-100 active tab-nav" 
            >2023</a
          >
          <a
            class="btn primary outlined hover:!bg-bordo-100 hover:text-white text-bordo-100 tab-nav"
            >2022</a
          >
          <a
            class="btn primary outlined hover:!bg-bordo-100 hover:text-white text-bordo-100 tab-nav"
            >2021</a
          >
          <a
            class="btn primary outlined hover:!bg-bordo-100 hover:text-white text-bordo-100 tab-nav"
            >2020</a
          >
          <a
            class="btn primary outlined hover:!bg-bordo-100 hover:text-white text-bordo-100 tab-nav"
            >Archiwum</a
          >
        </div>
        <table
          class="text-bordo-300 font-['Work_Sans'] custom-table min-w-[1200px] table-fixed mb-20 tab-item active"
        >
          <thead class="">
            {
              tableData.map((item, index) => {
                if (index === 0) {
                  return (
                    <tr>
                      {item.map((th) => (
                        <th class="text-[22px] font-light text-left py-4 px-5 bg-bordo-100/20">
                          {th}
                        </th>
                      ))}
                    </tr>
                  );
                }
              })
            }
          </thead>
          <tbody class="text-base font-light">
            {
              tableData.map((item, index) => {
                if (index > 0) {
                  return (
                    <tr>
                      {item.map((td) => (
                        <td>{td}</td>
                      ))}
                    </tr>
                  );
                }
              })
            }
          </tbody>
        </table>
        <table
          class="text-bordo-300 font-['Work_Sans'] custom-table min-w-[1200px] table-fixed mb-20 tab-item"
        >
          <thead class="">
            {
              tableData.map((item, index) => {
                if (index === 0) {
                  return (
                    <tr>
                      {item.map((th) => (
                        <th class="text-[22px] font-light text-left py-4 px-5 bg-bordo-100/20">
                          {th}
                        </th>
                      ))}
                    </tr>
                  );
                }
              })
            }
          </thead>
          <tbody class="text-base font-light">
            {
              tableData.map((item, index) => {
                if (index > 0) {
                  return (
                    <tr>
                      {item.map((td) => (
                        <td>{td}</td>
                      ))}
                    </tr>
                  );
                }
              })
            }
          </tbody>
        </table>
        <table
          class="text-bordo-300 font-['Work_Sans'] custom-table min-w-[1200px] table-fixed mb-20 tab-item"
        >
          <thead class="">
            {
              tableData.map((item, index) => {
                if (index === 0) {
                  return (
                    <tr>
                      {item.map((th) => (
                        <th class="text-[22px] font-light text-left py-4 px-5 bg-bordo-100/20">
                          {th}
                        </th>
                      ))}
                    </tr>
                  );
                }
              })
            }
          </thead>
          <tbody class="text-base font-light">
            {
              tableData.map((item, index) => {
                if (index > 0) {
                  return (
                    <tr>
                      {item.map((td) => (
                        <td>{td}</td>
                      ))}
                    </tr>
                  );
                }
              })
            }
          </tbody>
        </table>
        <table
          class="text-bordo-300 font-['Work_Sans'] custom-table min-w-[1200px] table-fixed mb-20 tab-item"
        >
          <thead class="">
            {
              tableData.map((item, index) => {
                if (index === 0) {
                  return (
                    <tr>
                      {item.map((th) => (
                        <th class="text-[22px] font-light text-left py-4 px-5 bg-bordo-100/20">
                          {th}
                        </th>
                      ))}
                    </tr>
                  );
                }
              })
            }
          </thead>
          <tbody class="text-base font-light">
            {
              tableData.map((item, index) => {
                if (index > 0) {
                  return (
                    <tr>
                      {item.map((td) => (
                        <td>{td}</td>
                      ))}
                    </tr>
                  );
                }
              })
            }
          </tbody>
        </table>
        <table
          class="text-bordo-300 font-['Work_Sans'] custom-table min-w-[1200px] table-fixed mb-20 tab-item"
        >
          <thead class="">
            {
              tableData.map((item, index) => {
                if (index === 0) {
                  return (
                    <tr>
                      {item.map((th) => (
                        <th class="text-[22px] font-light text-left py-4 px-5 bg-bordo-100/20">
                          {th}
                        </th>
                      ))}
                    </tr>
                  );
                }
              })
            }
          </thead>
          <tbody class="text-base font-light">
            {
              tableData.map((item, index) => {
                if (index > 0) {
                  return (
                    <tr>
                      {item.map((td) => (
                        <td>{td}</td>
                      ))}
                    </tr>
                  );
                }
              })
            }
          </tbody>
        </table>
      </div>
    </section>
  </main>
</Layout>

<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css"
/>
<link rel="stylesheet" href="/assets/css/table.css" />
<link rel="stylesheet" href="/assets/css/slider.css" />
<script
  is:inline
  src="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js"
></script>
<script is:inline src="/assets/js/script.js"></script>
